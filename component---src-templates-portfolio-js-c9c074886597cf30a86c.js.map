{"version":3,"sources":["webpack:///./src/templates/portfolio.js"],"names":["Portfolio","data","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","title","className","allMarkdownRemark","edges","map","project","i","key","src","node","frontmatter","image","publicURL","alt","description","date","to","fields","slug","aria-label","rel","Array","from","length","_","query"],"mappings":"4FAAA,0GA6EeA,UAvEG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACjBC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,cAAxB,eAAuDA,EAAc,GAAGK,WACnFC,EAAQ,eAAkBN,EAAc,GAAGK,WAEjD,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKE,MAAM,cACX,yCACA,yBAAKC,UAAU,OACZV,EAAKW,kBAAkBC,MAAMC,KAAI,SAACC,EAASC,GACxC,OACI,yBAAKL,UAAU,WAAWM,IAAKD,GAC3B,yBAAKL,UAAU,QACX,yBACIA,UAAU,yBACVO,IAAKH,EAAQI,KAAKC,YAAYC,MAAMC,UACpCC,IAAKR,EAAQI,KAAKC,YAAYV,QAElC,yBAAKC,UAAU,aACX,wBAAIA,UAAU,cAAcI,EAAQI,KAAKC,YAAYV,OACrD,uBAAGC,UAAU,aAAaI,EAAQI,KAAKC,YAAYI,aACnD,uBAAGb,UAAU,aAAY,2BAAOA,UAAU,cAAjB,YAAwCI,EAAQI,KAAKC,YAAYK,OAC1F,kBAAC,OAAD,CAAMC,GAAE,aAAeX,EAAQI,KAAKQ,OAAOC,KAAQjB,UAAU,gBAA7D,sBAMhB,yBAAKkB,aAAW,kBAAkBlB,UAAU,OAC1C,wBAAIA,UAAU,eACVN,GACA,wBAAIM,UAAU,aACZ,kBAAC,OAAD,CAAMe,GAAInB,EAAUI,UAAU,YAAYmB,IAAI,QAA9C,aAGHC,MAAMC,KAAK,CAAEC,OAAQ7B,IAAY,SAAC8B,EAAGlB,GACpC,OAAU,IAANA,EAEA,wBAAIL,UAAS,cAAgBK,EAAI,IAAMb,EAAc,SAAW,IAAOc,IAAG,qBAAsBD,EAAI,IAClG,kBAAC,OAAD,CAAMU,GAAE,cAAiBf,UAAU,aAAaK,EAAI,IAG/CA,EAAI,IAAMb,EAEjB,wBAAIQ,UAAU,mBAAmBM,IAAG,qBAAsBD,EAAI,IAC5D,uBAAGL,UAAU,aAAaK,EAAI,IAKhC,wBAAIL,UAAU,YAAYM,IAAG,qBAAsBD,EAAI,IACrD,kBAAC,OAAD,CAAMU,GAAE,eAAgBV,EAAI,GAAKL,UAAU,aAAaK,EAAI,QAKlEV,GACA,wBAAIK,UAAU,aACZ,kBAAC,OAAD,CAAMe,GAAIjB,EAAUE,UAAU,YAAYmB,IAAI,QAA9C,cAYX,IAAMK,EAAK","file":"component---src-templates-portfolio-js-c9c074886597cf30a86c.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\n\r\nimport SEO from '../components/seo'\r\nimport Layout from '../components/layout'\r\n\r\nconst Portfolio = ({ data, pageContext }) => {\r\n  const { currentPage, numPages } = pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/portfolio/\" : `/portfolio/${(currentPage - 1).toString()}`\r\n  const nextPage = `/portfolio/${(currentPage + 1).toString()}`\r\n\r\n  return (\r\n    <Layout>\r\n    <SEO title=\"Portfolio\" />\r\n    <h1>Portfolio</h1>\r\n    <div className=\"row\">\r\n      {data.allMarkdownRemark.edges.map((project, i) => {\r\n          return (\r\n              <div className=\"col-sm-6\" key={i}>\r\n                  <div className=\"card\">\r\n                      <img \r\n                          className=\"card-img-top portfolio\"  \r\n                          src={project.node.frontmatter.image.publicURL} \r\n                          alt={project.node.frontmatter.title}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                          <h5 className=\"card-title\">{project.node.frontmatter.title}</h5>\r\n                          <p className=\"card-text\">{project.node.frontmatter.description}</p>\r\n                          <p className=\"card-text\"><small className=\"text-muted\">Created: {project.node.frontmatter.date}</small></p>\r\n                          <Link to={`/portfolio${project.node.fields.slug}`} className=\"btn btn-info\">View Details</Link>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              )\r\n          })}\r\n          <nav aria-label=\"Page navigation\" className=\"pag\">\r\n            <ul className=\"pagination\">\r\n              {!isFirst && (\r\n                <li className=\"page-item\">\r\n                  <Link to={prevPage} className=\"page-link\" rel=\"prev\">Previous</Link>\r\n                </li>\r\n              )}\r\n              {Array.from({ length: numPages }, (_, i) => {\r\n                if (i === 0) {\r\n                  return(\r\n                    <li className={`page-item ${(i + 1 === currentPage ? 'active' : '')}`} key={`pagination-number${i + 1}`}>\r\n                      <Link to={`/portfolio/`} className=\"page-link\">{i + 1}</Link>\r\n                    </li>\r\n                  )\r\n                } else if (i + 1 === currentPage) {\r\n                  return (\r\n                    <li className=\"page-item active\" key={`pagination-number${i + 1}`}>\r\n                      <p className=\"page-link\">{i + 1}</p>\r\n                    </li>\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <li className=\"page-item\" key={`pagination-number${i + 1}`}>\r\n                      <Link to={`/portfolio/${i + 1}`} className=\"page-link\">{i + 1}</Link>\r\n                    </li>\r\n                  )\r\n                }\r\n              })}\r\n              {!isLast && (\r\n                <li className=\"page-item\">\r\n                  <Link to={nextPage} className=\"page-link\" rel=\"next\">Next</Link>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Portfolio\r\n\r\nexport const query = graphql`\r\n    query($skip: Int!, $limit: Int!) {\r\n      allMarkdownRemark(\r\n        sort: {fields: frontmatter___date, order: DESC}\r\n        limit: $limit\r\n        skip: $skip\r\n        filter: {frontmatter: {type: {eq: \"portfolio\"}}}\r\n        ) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              date(formatString: \"MMMM YYYY\")\r\n              title\r\n              description\r\n              image {\r\n                publicURL\r\n              }\r\n            }\r\n            fields {\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `"],"sourceRoot":""}